% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_channel.R
\name{convert_channel}
\alias{convert_channel}
\title{Function for assisting in the conversion of object to be suitable channel inputs to a dynatopGIS object}
\usage{
convert_channel(
  chn,
  property_names = c(name = "name", length = "length", area = "area", startNode =
    "startNode", endNode = "endNode", width = "width", slope = "slope", channelVol =
    "channelVol"),
  defaults = c(width = 2, slope = 0.001, depth = 1),
  drop = TRUE
)
}
\arguments{
\item{chn}{a SpatVect object or a file which can read by terra::vect to create one}

\item{property_names}{a named vector of containing the columns of existing data properties required in the final SpatialPolygonsDataFrame}

\item{default_width}{the width in m to be used for buffering lines to produce polygons}

\item{default_slope}{the slope in m/m to be used when none is provided}

\item{default_depth}{used to compute bankfull volume is none provided}

\item{simplify_length}{channel reachs shorter then this will be merged.}

\item{wb}{a SpatVect containing waterbody polygons a or file which can read by terra::vect to create one}
}
\value{
A SpatVect containing polygons of the channel network, with at least the following properties: name, length, area, width, slope, startNode, endNode and channelVol.
}
\description{
Converts SpatVect of the channel network into SpatVect containing polgons suitable for dynatopGIS
}
\details{
The processing follows the follwoing sequence:
  - The `property_names` input is used to rename the data associated with spatial objects. Existing variables may be deleted or overwritten if names clash.
  - Varaibles are converted to the expected type then checked for missing values; in doing this
      - Missing `slope` values are populated by the default
      - Missing `startNode` values are replaced by `sn_<name>`
      - Missing `endNode` values are replaced by `en_<name>`
  - If the spatial objects are polygons
     - Missing `area` values are computed from the polygons
     - Missing `width` values are populated by `area` / `length`
  - else if the spatial objects are lines
     - Missing `width` values are filled with the default values
     - The spatial objects are buffered to give the correct `width`
     - Missing `area` values are computed from the polygons
  - Missing `channelVol` values are populated by the `area` multiplied by the default depth.
  - if `drop=TRUE` all columns except those required are dropped
}
\examples{
channel_file <- system.file("extdata", "SwindaleRiverNetwork.shp",
package="dynatopGIS", mustWork = TRUE)
vect_lines <- terra::vect(channel_file)
property_names <- c(name="identifier",endNode="endNode",startNode="startNode",length="length")
chn <- convert_channel(vect_lines,property_names)
}
